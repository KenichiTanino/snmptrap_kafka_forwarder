name: redpanda-quickstart-one-broker
networks:
  redpanda_network:
    driver: bridge
volumes:
  redpanda-0: null
services:
  redpanda-0:
    build: ./docker
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:9092
      - --pandaproxy-addr internal://0.0.0.0:8082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:8082
      - --schema-registry-addr internal://0.0.0.0:8081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info
      - --memory 1G
      - --overprovisioned
      - --set redpanda.auto_create_topics_enabled=true
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 19644:9644
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v3.2.1
    networks:
      - redpanda_network
    volumes:
      - ./console-config.yml:/tmp/config.yml
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0
